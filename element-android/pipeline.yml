# Use Docker file from https://hub.docker.com/r/runmymind/docker-android-sdk
# Last docker plugin version can be found here:
# https://github.com/buildkite-plugins/docker-buildkite-plugin/releases
# We propagate the environment to the container (sse https://github.com/buildkite-plugins/docker-buildkite-plugin#propagate-environment-optional-boolean)

steps:
  - label: ":android: Assemble GPlay Debug version"
    agents:
      # We use a xlarge sized instance instead of the normal small ones because
      # gradle build can be memory hungry
      # build on the burn-after-use ephemeral queue
      queue: "ephemeral-xlarge"
    commands:
      - "./gradlew clean assembleGplayDebug --stacktrace"
      - "mv vector/build/outputs/apk/gplay/debug/*.apk ."
    key: "gplay_debug"
    artifact_paths:
      - "*.apk"
    branches: "!main"
    plugins:
      - docker#v3.1.0:
          image: "runmymind/docker-android-sdk"
          propagate-environment: true
          mount-buildkite-agent: false

  - label: ":android: Assemble FDroid Debug version"
    agents:
      # We use a xlarge sized instance instead of the normal small ones because
      # gradle build can be memory hungry
      # build on the burn-after-use ephemeral queue
      queue: "ephemeral-xlarge"
    commands:
      - "./gradlew clean assembleFdroidDebug --stacktrace"
      - "mv vector/build/outputs/apk/fdroid/debug/*.apk ."
    artifact_paths:
      - "*.apk"
    branches: "!main"
    plugins:
      - docker#v3.1.0:
          image: "runmymind/docker-android-sdk"
          propagate-environment: true
          mount-buildkite-agent: false

  - label: ":android: Build Google Play unsigned release APK"
    agents:
      # We use a xlarge sized instance instead of the normal small ones because
      # gradle build can be memory hungry
      queue: "xlarge"
    commands:
      - "./gradlew clean assembleGplayRelease --stacktrace"
      - "mv vector/build/outputs/apk/gplay/release/*.apk ."
    key: "gplay_release"
    artifact_paths:
      - "*.apk"
    branches: "main"
    plugins:
      - docker#v3.1.0:
          image: "runmymind/docker-android-sdk"
          propagate-environment: true
          mount-buildkite-agent: false

  # run the εxodus static analyser
  - label: "εxodus"
    plugins:
      - artifacts#v1.3.0:
          download:
            - "vector-gplay-universal-*.apk"
          upload:
            - "exodus.json"

    commands:
      - "mv vector-gplay-universal-*.apk app.apk"
      - "docker run -v $(pwd)/app.apk:/app.apk --rm -i exodusprivacy/exodus-standalone -j > exodus.json"
      - "jq -e '.trackers == []' exodus.json > /dev/null || { echo 'static analysis identified user tracking library' ; false; }"
    depends_on: 
      - gplay_debug
      - gplay_release
