steps:
  - label: ":eslint: JS Lint"
    command:
      - "echo '--- Fetching Dependencies'"
      - "./scripts/fetch-develop.deps.sh --depth 1"
      - "yarn install"
      - "echo '+++ Lint'"
      - "yarn lint:js"
    plugins:
      - docker#v3.0.1:
          image: "node:14-buster"
          # This allows the test script to see what branch it's testing and check
          # out the equivalent dependency branches, if they exist
          propagate-environment: true
          mount-buildkite-agent: false

  - label: ":eslint: Types Lint"
    agents:
      queue: "medium"
    command:
      - "echo '--- Fetching Dependencies'"
      - "./scripts/fetch-develop.deps.sh --depth 1"
      - "yarn install"
      - "echo '+++ Checking types'"
      - "yarn lint:types"
    plugins:
      - docker#v3.0.1:
          image: "node:14-buster"
          # This allows the test script to see what branch it's testing and check
          # out the equivalent dependency branches, if they exist
          propagate-environment: true
          mount-buildkite-agent: false

  - label: ":stylelint: Style Lint"
    command:
      - "echo '--- Fetching Dependencies'"
      - "./scripts/fetch-develop.deps.sh --depth 1"
      - "yarn install"
      - "echo '+++ Lint'"
      - "yarn lint:style"
    plugins:
      - docker#v3.0.1:
          image: "node:14-buster"
          # This allows the test script to see what branch it's testing and check
          # out the equivalent dependency branches, if they exist
          propagate-environment: true
          mount-buildkite-agent: false

  - label: ":hammer_and_wrench: Build"
    agents:
      # We use a medium sized instance instead of the normal small ones because
      # webpack loves to gorge itself on resources.
      queue: "medium"
    command:
      - "echo '--- Fetching Dependencies'"
      - "./scripts/fetch-develop.deps.sh --depth 1"
      - "yarn install"
      - "echo '+++ Building Project'"
      - "yarn build-stats"
    artifact_paths: "webpack-stats.json"
    plugins:
      - docker#v3.0.1:
          image: "node:14-buster"
          # This allows the test script to see what branch it's testing and check
          # out the equivalent dependency branches, if they exist
          propagate-environment: true
          mount-buildkite-agent: false

  - label: ":jest: Tests"
    agents:
      # We use a medium sized instance instead of the normal small ones because
      # webpack loves to gorge itself on resources.
      queue: "medium"
    command:
      - "echo '--- Fetching Dependencies'"
      - "./scripts/fetch-develop.deps.sh --depth 1"
      - "yarn install"
      - "yarn build:genfiles"  # We have to build the app to make sure the autogenned files are present
      - "echo '+++ Running Tests'"
      - "yarn test"
    plugins:
      - docker#v3.0.1:
          image: "node:14-buster"
          # This allows the test script to see what branch it's testing and check
          # out the equivalent dependency branches, if they exist
          propagate-environment: true
          mount-buildkite-agent: false

  - label: ":globe_with_meridians: i18n"
    command:
      - "echo '--- Fetching Dependencies'"
      - "./scripts/fetch-develop.deps.sh --depth 1"
      - "yarn install"
      - "echo '+++ Testing i18n output'"
      - "yarn diff-i18n"
    plugins:
      - docker#v3.0.1:
          image: "node:14-buster"
          # This allows the test script to see what branch it's testing and check
          # out the equivalent dependency branches, if they exist
          propagate-environment: true
          mount-buildkite-agent: false

  - wait: ~ # this wait is to perform deploy to /develop only if all other steps passed
    continue_on_failure: false

  - label: ":package: Package"
    agents:
      # The tarballs this builds are deployed, so use the slow, burn-after-use queue
      queue: "ephemeral-small"
    command:
      - "echo '--- Fetching Dependencies'"
      - "./scripts/fetch-develop.deps.sh --depth 1"
      - "yarn install"
      - "echo '+++ Packaging'"
      - "./scripts/ci_package.sh"
    branches: "develop"
    artifact_paths: "dist/*.tar.gz"
    plugins:
      - docker#v3.0.1:
          image: "node:14-buster"
          mount-buildkite-agent: false
